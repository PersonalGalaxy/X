arguments:
    metas: array
    neo4jPassword: string
    filesStoragePath: string

dependencies:
    transport @innmind/http-transport/container.yml: []

    dbal @innmind/neo4j-dbal/container.yml:
        transport: $transport.thrower
        clock: $infrastructure.clock
        password: $neo4jPassword
        scheme: http

    neo4j @innmind/neo4j-onm/container.yml:
        connection: $dbal.connection
        metas: $metas
        extractionStrategy: $infrastructure.neo4j.reflection.extraction
        injectionStrategy: $infrastructure.neo4j.reflection.injection
        instanciator: $infrastructure.neo4j.reflection.instanciator
        additionalTypes: $infrastructure.neo4j.additionalTypes
        additionalGenerators: $infrastructure.neo4j.additionalGenerators

    commandBus @innmind/command-bus/container.yml:
        handlers: $handlers

    eventBus @innmind/event-bus/container.yml:
        listeners: $listeners

    xml @innmind/xml/container.yml: []

expose:
    commands: $commands

services:
    commands Innmind\CLI\Commands:
        - $component.identity.command.create

    appCommandBus stack:
        - $commandBus.queue
        - $appCommandBus.transaction
        - $appCommandBus.clearDomainEvents
        - $appCommandBus.dispatchDomainEvents
        - $appCommandBus.flush
        - $commandBus.bus

    appCommandBus:
        clearDomainEvents Innmind\Neo4j\ONM\CommandBus\ClearDomainEvents:
            - '@decorated'
            - $neo4j.container

        dispatchDomainEvents Innmind\Neo4j\ONM\CommandBus\DispatchDomainEvents:
            - '@decorated'
            - $eventBus.bus
            - $neo4j.container

        flush Innmind\Neo4j\ONM\CommandBus\Flush:
            - '@decorated'
            - $neo4j.manager

        transaction Innmind\Neo4j\ONM\CommandBus\Transaction:
            - '@decorated'
            - $neo4j.manager

    handlers merge:
        - $component.identity.handlers
        - $component.calendar.handlers
        - $component.files.handlers
        - $component.rss.handlers

    listeners merge:
        - $component.identity.listeners
        - $component.calendar.listeners
        - $component.files.listeners
        - $component.rss.listeners
        - $listeners.override

    listeners:
        override map<string, Innmind\Immutable\SetInterface>:
            - <PersonalGalaxy\Identity\Event\IdentityWasCreated, $listeners.override.identityWasCreated> # necessary as multiple components listen to the same event

        override:
            identityWasCreated merge:
                - $component.calendar.listeners.identityWasCreated
                - $component.files.listeners.identityWasCreated

    infrastructure:
        clock Innmind\TimeContinuum\TimeContinuum\Earth:
            - $infrastructure.clock.timezone

        clock:
            timezone Innmind\TimeContinuum\Timezone\Earth\UTC: []

        neo4j:
            reflection:
                extraction Innmind\Reflection\ExtractionStrategy\ReflectionStrategy: []
                injection Innmind\Reflection\InjectionStrategy\ReflectionStrategy: []
                instanciator Innmind\Reflection\Instanciator\ConstructorLessInstanciator: []

            types set<string>:
                - Innmind\Neo4j\ONM\Type\PointInTimeType
                - PersonalGalaxy\X\Type\UrlType

            additionalTypes merge:
                - $component.identity.additionalTypes
                - $component.calendar.additionalTypes
                - $component.files.additionalTypes
                - $component.rss.additionalTypes
                - $infrastructure.neo4j.types

            additionalGenerators merge:
                - $component.identity.additionalGenerators
                - $component.calendar.additionalGenerators
                - $component.files.additionalGenerators
                - $component.rss.additionalGenerators

        files:
            storage Innmind\Filesystem\Adapter\HashedNameAdapter:
                - $infrastructure.files.storage.inner
            storage:
                inner Innmind\Filesystem\Adapter\FilesystemAdapter:
                    - $filesStoragePath

    component:
        identity:
            command:
                create PersonalGalaxy\X\Command\Identity\Create:
                    - $appCommandBus
                    - $neo4j.manager
                    - $component.identity.listener.recoveryCodes

            handlers map<string, callable>:
                - <PersonalGalaxy\Identity\Command\CreateIdentity, $component.identity.handler.createIdentity>
                - <PersonalGalaxy\Identity\Command\DeleteIdentity, $component.identity.handler.deleteIdentity>
                - <PersonalGalaxy\Identity\Command\Identity\ChangePassword, $component.identity.handler.changePassword>
                - <PersonalGalaxy\Identity\Command\Identity\Disable2FA, $component.identity.handler.disable2FA>
                - <PersonalGalaxy\Identity\Command\Identity\Enable2FA, $component.identity.handler.enable2FA>
                - <PersonalGalaxy\Identity\Command\Identity\Validate2FACode, $component.identity.handler.validate2FACode>
                - <PersonalGalaxy\Identity\Command\Identity\VerifyPassword, $component.identity.handler.verifyPassword>

            handler:
                createIdentity PersonalGalaxy\Identity\Handler\CreateIdentityHandler:
                    - $component.identity.repository
                deleteIdentity PersonalGalaxy\Identity\Handler\DeleteIdentityHandler:
                    - $component.identity.repository
                changePassword PersonalGalaxy\Identity\Handler\Identity\ChangePasswordHandler:
                    - $component.identity.repository
                disable2FA PersonalGalaxy\Identity\Handler\Identity\Disable2FAHandler:
                    - $component.identity.repository
                enable2FA PersonalGalaxy\Identity\Handler\Identity\Enable2FAHandler:
                    - $component.identity.repository
                validate2FACode PersonalGalaxy\Identity\Handler\Identity\Validate2FACodeHandler:
                    - $component.identity.repository
                verifyPassword PersonalGalaxy\Identity\Handler\Identity\VerifyPasswordHandler:
                    - $component.identity.repository

            listeners map<string, Innmind\Immutable\SetInterface>:
                - <PersonalGalaxy\Identity\Event\Identity\TwoFactorAuthenticationWasEnabled, $component.identity.listeners.recoveryCodes>

            listeners:
                recoveryCodes set<callable>:
                    - $component.identity.listener.recoveryCodes

            listener:
                recoveryCodes PersonalGalaxy\X\Component\Identity\Listener\RecoveryCodes: []

            repository PersonalGalaxy\X\Repository::build:
                - $neo4j.manager
                - PersonalGalaxy\X\Component\Identity\Repository\IdentityRepository
                - PersonalGalaxy\Identity\Entity\Identity

            additionalTypes set<string>:
                - PersonalGalaxy\X\Component\Identity\Type\EmailType
                - PersonalGalaxy\X\Component\Identity\Type\PasswordType
                - PersonalGalaxy\X\Component\Identity\Type\RecoveryCodeType
                - PersonalGalaxy\X\Component\Identity\Type\SecretKeyType

            additionalGenerators map<string, Innmind\Neo4j\ONM\Identity\Generator>:
                - <PersonalGalaxy\X\Component\Identity\Entity\Identity, $component.identity.generator.identity>

            generator:
                identity Innmind\Neo4j\ONM\Identity\Generator\UuidGenerator:
                    - PersonalGalaxy\X\Component\Identity\Entity\Identity

        calendar:
            handlers map<string, callable>:
                - <PersonalGalaxy\Calendar\Command\AddAgenda, $component.calendar.handler.agenda.add>
                - <PersonalGalaxy\Calendar\Command\DeleteAgenda, $component.calendar.handler.agenda.wrap.delete>
                - <PersonalGalaxy\Calendar\Command\RenameAgenda, $component.calendar.handler.agenda.rename>
                - <PersonalGalaxy\Calendar\Command\AddEvent, $component.calendar.handler.event.add>
                - <PersonalGalaxy\Calendar\Command\CancelEvent, $component.calendar.handler.event.cancel>
                - <PersonalGalaxy\Calendar\Command\MoveEvent, $component.calendar.handler.event.move>
                - <PersonalGalaxy\Calendar\Command\RenameEvent, $component.calendar.handler.event.rename>
                - <PersonalGalaxy\Calendar\Command\Event\AddNote, $component.calendar.handler.event.addNote>

            handler:
                agenda:
                    add PersonalGalaxy\Calendar\Handler\AddAgendaHandler:
                        - $component.calendar.repository.agenda
                    delete PersonalGalaxy\Calendar\Handler\DeleteAgendaHandler:
                        - $component.calendar.repository.agenda
                        - $component.calendar.repository.event
                        - $component.calendar.handler.event.cancel
                    rename PersonalGalaxy\Calendar\Handler\RenameAgendaHandler:
                        - $component.calendar.repository.agenda
                    wrap:
                        delete PersonalGalaxy\X\Component\Calendar\Handler\DeleteAgendaHandler:
                            - $component.calendar.handler.agenda.delete
                            - $dbal.connection
                event:
                    add PersonalGalaxy\Calendar\Handler\AddEventHandler:
                        - $component.calendar.repository.event
                        - $component.calendar.repository.agenda
                        - $infrastructure.clock
                    cancel PersonalGalaxy\Calendar\Handler\CancelEventHandler:
                        - $component.calendar.repository.event
                    move PersonalGalaxy\Calendar\Handler\MoveEventHandler:
                        - $component.calendar.repository.event
                        - $infrastructure.clock
                    rename PersonalGalaxy\Calendar\Handler\RenameEventHandler:
                        - $component.calendar.repository.event
                    addNote PersonalGalaxy\Calendar\Handler\Event\AddNoteHandler:
                        - $component.calendar.repository.event

            repository:
                agenda PersonalGalaxy\X\Repository::build:
                    - $neo4j.manager
                    - PersonalGalaxy\X\Component\Calendar\Repository\AgendaRepository
                    - PersonalGalaxy\Calendar\Entity\Agenda

                event PersonalGalaxy\X\Repository::build:
                    - $neo4j.manager
                    - PersonalGalaxy\X\Component\Calendar\Repository\EventRepository
                    - PersonalGalaxy\Calendar\Entity\Event

            listeners map<string, Innmind\Immutable\SetInterface>:
                - <PersonalGalaxy\Calendar\Event\AgendaWasAdded, $component.calendar.listeners.agendaWasAdded>
                - <PersonalGalaxy\Identity\Event\IdentityWasCreated, $component.calendar.listeners.identityWasCreated>

            listeners:
                agendaWasAdded set<callable>:
                    - $component.calendar.listener.bindAgendaToIdentity
                identityWasCreated set<callable>:
                    - $component.calendar.listener.createDefaultAgenda

            listener:
                bindAgendaToIdentity PersonalGalaxy\X\Component\Calendar\Listener\BindAgendaToIdentity:
                    - $dbal.connection
                createDefaultAgenda PersonalGalaxy\X\Component\Calendar\Listener\CreateDefaultAgenda:
                    - $appCommandBus
                    - $neo4j.manager

            additionalTypes set<string>:
                - PersonalGalaxy\X\Component\Calendar\Type\Agenda\NameType
                - PersonalGalaxy\X\Component\Calendar\Type\Agenda\UserType
                - PersonalGalaxy\X\Component\Calendar\Type\Event\AgendaType
                - PersonalGalaxy\X\Component\Calendar\Type\Event\NameType
                - PersonalGalaxy\X\Component\Calendar\Type\Event\NoteType
                - PersonalGalaxy\X\Component\Calendar\Type\Event\SlotType

            additionalGenerators map<string, Innmind\Neo4j\ONM\Identity\Generator>:
                - <PersonalGalaxy\X\Component\Calendar\Entity\Agenda, $component.calendar.generator.agenda>
                - <PersonalGalaxy\X\Component\Calendar\Entity\Event, $component.calendar.generator.event>

            generator:
                agenda Innmind\Neo4j\ONM\Identity\Generator\UuidGenerator:
                    - PersonalGalaxy\X\Component\Calendar\Entity\Agenda
                event Innmind\Neo4j\ONM\Identity\Generator\UuidGenerator:
                    - PersonalGalaxy\X\Component\Calendar\Entity\Event

        files:
            handlers map<string, callable>:
                - <PersonalGalaxy\Files\Command\AddFolder, $component.files.handler.folder.add>
                - <PersonalGalaxy\Files\Command\MoveFolder, $component.files.handler.folder.move>
                - <PersonalGalaxy\Files\Command\RemoveFolder, $component.files.handler.wrap.folder.remove>
                - <PersonalGalaxy\Files\Command\RenameFolder, $component.files.handler.folder.rename>
                - <PersonalGalaxy\Files\Command\RestoreFolder, $component.files.handler.folder.restore>
                - <PersonalGalaxy\Files\Command\TrashFolder, $component.files.handler.folder.trash>
                - <PersonalGalaxy\Files\Command\AddFile, $component.files.handler.file.add>
                - <PersonalGalaxy\Files\Command\MoveFile, $component.files.handler.file.move>
                - <PersonalGalaxy\Files\Command\RemoveFile, $component.files.handler.wrap.file.remove>
                - <PersonalGalaxy\Files\Command\RenameFile, $component.files.handler.file.rename>
                - <PersonalGalaxy\Files\Command\RestoreFile, $component.files.handler.file.restore>
                - <PersonalGalaxy\Files\Command\TrashFile, $component.files.handler.file.trash>
                - <PersonalGalaxy\Files\Command\EmptyTrash, $component.files.handler.wrap.emptyTrash>

            handler:
                folder:
                    add PersonalGalaxy\Files\Handler\AddFolderHandler:
                        - $component.files.repository.folder
                    move PersonalGalaxy\Files\Handler\MoveFolderHandler:
                        - $component.files.repository.folder
                    remove PersonalGalaxy\Files\Handler\RemoveFolderHandler:
                        - $component.files.repository.file
                        - $component.files.repository.folder
                        - $component.files.handler.file.remove
                    rename PersonalGalaxy\Files\Handler\RenameFolderHandler:
                        - $component.files.repository.folder
                    restore PersonalGalaxy\Files\Handler\RestoreFolderHandler:
                        - $component.files.repository.folder
                    trash PersonalGalaxy\Files\Handler\TrashFolderHandler:
                        - $component.files.repository.folder
                file:
                    add PersonalGalaxy\Files\Handler\AddFileHandler:
                        - $component.files.repository.file
                        - $component.files.repository.folder
                        - $infrastructure.files.storage
                    move PersonalGalaxy\Files\Handler\MoveFileHandler:
                        - $component.files.repository.file
                        - $component.files.repository.folder
                    remove PersonalGalaxy\Files\Handler\RemoveFileHandler:
                        - $component.files.repository.file
                        - $infrastructure.files.storage
                    rename PersonalGalaxy\Files\Handler\RenameFileHandler:
                        - $component.files.repository.file
                    restore PersonalGalaxy\Files\Handler\RestoreFileHandler:
                        - $component.files.repository.file
                    trash PersonalGalaxy\Files\Handler\TrashFileHandler:
                        - $component.files.repository.file
                emptyTrash PersonalGalaxy\Files\Handler\EmptyTrashHandler:
                    - $component.files.repository.file
                    - $component.files.repository.folder
                    - $component.files.handler.file.remove
                    - $component.files.handler.folder.remove

                wrap:
                    folder:
                        remove PersonalGalaxy\X\Component\Files\Handler\RemoveFolderHandler:
                            - $component.files.handler.folder.remove
                            - $dbal.connection
                    file:
                        remove PersonalGalaxy\X\Component\Files\Handler\RemoveFileHandler:
                            - $component.files.handler.file.remove
                            - $dbal.connection
                    emptyTrash PersonalGalaxy\X\Component\Files\Handler\EmptyTrashHandler:
                        - $component.files.handler.emptyTrash
                        - $dbal.connection

            listeners map<string, Innmind\Immutable\SetInterface>:
                - <PersonalGalaxy\Files\Event\FolderWasAdded, $component.files.listeners.folderWasAdded>
                - <PersonalGalaxy\Files\Event\FolderWasMovedToADifferentFolder, $component.files.listeners.folderWasMovedToADifferentFolder>
                - <PersonalGalaxy\Files\Event\FileWasAdded, $component.files.listeners.fileWasAdded>
                - <PersonalGalaxy\Files\Event\FileWasMovedToADifferentFolder, $component.files.listeners.fileWasMovedToADifferentFolder>
                - <PersonalGalaxy\Identity\Event\IdentityWasCreated, $component.files.listeners.identityWasCreated>

            listeners:
                folderWasAdded set<callable>:
                    - $component.files.listener.bindFolderToParent
                folderWasMovedToADifferentFolder set<callable>:
                    - $component.files.listener.bindFolderToNewParent
                fileWasAdded set<callable>:
                    - $component.files.listener.bindFileToFolder
                fileWasMovedToADifferentFolder set<callable>:
                    - $component.files.listener.bindFileToNewFolder
                identityWasCreated set<callable>:
                    - $component.files.listener.createRootFolder

            listener:
                bindFolderToParent PersonalGalaxy\X\Component\Files\Listener\BindFolderToParent:
                    - $dbal.connection
                bindFolderToNewParent PersonalGalaxy\X\Component\Files\Listener\BindFolderToNewParent:
                    - $dbal.connection
                bindFileToFolder PersonalGalaxy\X\Component\Files\Listener\BindFileToFolder:
                    - $dbal.connection
                bindFileToNewFolder PersonalGalaxy\X\Component\Files\Listener\BindFileToNewFolder:
                    - $dbal.connection
                createRootFolder PersonalGalaxy\X\Component\Files\Listener\CreateRootFolder:
                    - $dbal.connection
                    - $neo4j.manager

            repository:
                folder PersonalGalaxy\X\Repository::build:
                    - $neo4j.manager
                    - PersonalGalaxy\X\Component\Files\Repository\FolderRepository
                    - PersonalGalaxy\Files\Entity\Folder

                file PersonalGalaxy\X\Repository::build:
                    - $neo4j.manager
                    - PersonalGalaxy\X\Component\Files\Repository\FileRepository
                    - PersonalGalaxy\Files\Entity\File

            additionalTypes set<string>:
                - PersonalGalaxy\X\Component\Files\Type\Folder\NameType
                - PersonalGalaxy\X\Component\Files\Type\Folder\IdentityType
                - PersonalGalaxy\X\Component\Files\Type\File\NameType
                - PersonalGalaxy\X\Component\Files\Type\File\MediaTypeType

            additionalGenerators map<string, Innmind\Neo4j\ONM\Identity\Generator>:
                - <PersonalGalaxy\X\Component\Files\Entity\Folder, $component.files.generator.folder>
                - <PersonalGalaxy\X\Component\Files\Entity\File, $component.files.generator.file>

            generator:
                folder Innmind\Neo4j\ONM\Identity\Generator\UuidGenerator:
                    - PersonalGalaxy\X\Component\Files\Entity\Folder
                file Innmind\Neo4j\ONM\Identity\Generator\UuidGenerator:
                    - PersonalGalaxy\X\Component\Files\Entity\File

        rss:
            handlers map<string, callable>:
                - <PersonalGalaxy\RSS\Command\AddSubscription, $component.rss.handler.subscription.add>
                - <PersonalGalaxy\RSS\Command\FetchSubscription, $component.rss.handler.subscription.fetch>
                - <PersonalGalaxy\RSS\Command\RemoveSubscription, $component.rss.handler.wrap.subscription.remove>
                - <PersonalGalaxy\RSS\Command\MarkArticleAsRead, $component.rss.handler.article.markAsRead>

            handler:
                subscription:
                    add PersonalGalaxy\RSS\Handler\AddSubscriptionHandler:
                        - $component.rss.repository.subscription
                    fetch PersonalGalaxy\RSS\Handler\FetchSubscriptionHandler:
                        - $component.rss.repository.subscription
                        - $component.rss.repository.article
                        - $component.rss.crawler
                    remove PersonalGalaxy\RSS\Handler\RemoveSubscriptionHandler:
                        - $component.rss.repository.subscription
                article:
                    markAsRead PersonalGalaxy\RSS\Handler\MarkArticleAsReadHandler:
                        - $component.rss.repository.article
                wrap:
                    subscription:
                        remove PersonalGalaxy\X\Component\RSS\Handler\RemoveSubscriptionHandler:
                            - $component.rss.handler.subscription.remove
                            - $dbal.connection

            listeners map<string, Innmind\Immutable\SetInterface>:
                - <PersonalGalaxy\RSS\Event\SubscriptionWasAdded, $component.rss.listeners.subscriptionWasAdded>
                - <PersonalGalaxy\RSS\Event\ArticleWasFetched, $component.rss.listeners.articleWasFetched>

            listeners:
                subscriptionWasAdded set<callable>:
                    - $component.rss.listener.bindSubscriptionToIdentity
                articleWasFetched set<callable>:
                    - $component.rss.listener.bindArticleToSubscription

            listener:
                bindSubscriptionToIdentity PersonalGalaxy\X\Component\RSS\Listener\BindSubscriptionToIdentity:
                    - $dbal.connection
                bindArticleToSubscription PersonalGalaxy\X\Component\RSS\Listener\BindArticleToSubscription:
                    - $component.rss.repository.article
                    - $dbal.connection

            repository:
                subscription PersonalGalaxy\X\Repository::build:
                    - $neo4j.manager
                    - PersonalGalaxy\X\Component\RSS\Repository\SubscriptionRepository
                    - PersonalGalaxy\RSS\Entity\Subscription

                article PersonalGalaxy\X\Repository::build:
                    - $neo4j.manager
                    - PersonalGalaxy\X\Component\RSS\Repository\ArticleRepository
                    - PersonalGalaxy\RSS\Entity\Article

            additionalTypes set<string>:
                - PersonalGalaxy\X\Component\RSS\Type\Article\AuthorType
                - PersonalGalaxy\X\Component\RSS\Type\Article\DescriptionType
                - PersonalGalaxy\X\Component\RSS\Type\Article\TitleType
                - PersonalGalaxy\X\Component\RSS\Type\Article\SubscriptionType
                - PersonalGalaxy\X\Component\RSS\Type\Subscription\NameType
                - PersonalGalaxy\X\Component\RSS\Type\Subscription\UserType

            additionalGenerators map<string, Innmind\Neo4j\ONM\Identity\Generator>:
                - <PersonalGalaxy\X\Component\RSS\Entity\Subscription, $component.rss.generator.subscription>
                - <PersonalGalaxy\X\Component\RSS\Entity\Article, $component.rss.generator.article>

            generator:
                subscription Innmind\Neo4j\ONM\Identity\Generator\UuidGenerator:
                    - PersonalGalaxy\X\Component\RSS\Entity\Subscription
                article PersonalGalaxy\X\Component\RSS\Generator\ArticleGenerator: []

            urlFactory PersonalGalaxy\X\Component\RSS\UrlFactory: []

            crawler Innmind\Crawler\Crawler\Crawler:
                - $transport.conservative
                - $component.rss.parser

            parser Innmind\Crawler\Parser\SequenceParser:
                - $component.rss.parser.rss
                - $component.rss.parser.atom

            parser:
                rss PersonalGalaxy\RSS\Parser\RSS:
                    - $xml.reader
                    - $infrastructure.clock
                    - $component.rss.urlFactory
                atom PersonalGalaxy\RSS\Parser\Atom:
                    - $xml.reader
                    - $infrastructure.clock
                    - $component.rss.urlFactory
